name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 缓存pip依赖
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 运行代码格式化检查
      run: |
        black --check .
        isort --check-only .

    - name: 运行静态分析
      run: |
        flake8 . --max-line-length=88 --ignore=E203,W503

    - name: 运行测试
      run: |
        python -m pytest --tb=short
      env:
        PYTHONPATH: .

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 安装构建依赖
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: 构建包
      run: python -m build

    - name: 检查包
      run: python -m twine check dist/*

    - name: 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 运行安全扫描
      run: |
        pip install safety bandit
        safety check
        bandit -r app/ -f json -o bandit-report.json || true

    - name: 上传安全扫描报告
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-reports
        path: bandit-report.json

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 登录到Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 构建并推送Docker镜像
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/teachaid:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/teachaid:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max